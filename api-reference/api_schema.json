{
  "openapi": "3.0.3",
  "info": {
    "title": "Dromo",
    "description": "Dromo's APIs provide convenient programmatic access to your uploads and schemas. You can use them to create powerful automated workflows.",
    "termsOfService": "https://dromo.io/legal/terms",
    "contact": {
      "name": "Dromo",
      "email": "contact@dromo.io"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://app.dromo.io/api/v1"
    }
  ],
  "security": [
    {
      "api_key": []
    }
  ],
  "tags": [
    {
      "name": "uploads",
      "description": "Viewing completed imports"
    },
    {
      "name": "import-schemas",
      "description": "Creating and viewing import schemas"
    },
    {
      "name": "headless",
      "description": "Creating and viewing headless imports"
    }
  ],
  "paths": {
    "/schemas/": {
      "get": {
        "operationId": "listImportSchemas",
        "summary": "Get all import schemas",
        "tags": [
          "import-schemas"
        ],
        "responses": {
          "200": {
            "description": "List import schemas",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImportSchema"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createImportSchema",
        "summary": "Create a new import schema",
        "tags": [
          "import-schemas"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Schema Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSchema"
                }
              }
            }
          }
        }
      }
    },
    "/schemas/{id}/": {
      "get": {
        "operationId": "getImportSchema",
        "summary": "Get an import schema",
        "tags": [
          "import-schemas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Headless import ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "66d6300d-1414-4655-83b4-8c80fc527315"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An import schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "operationId": "updateImportSchema",
        "summary": "Update an import schema",
        "tags": [
          "import-schemas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Headless import ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "66d6300d-1414-4655-83b4-8c80fc527315"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated schema",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportSchema"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "operationId": "deleteImportSchema",
        "summary": "Delete an import schema",
        "tags": [
          "import-schemas"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Headless import ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "66d6300d-1414-4655-83b4-8c80fc527315"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Import schema deleted"
          }
        }
      }
    },
    "/uploads/": {
      "get": {
        "operationId": "listUploads",
        "summary": "Get all uploads",
        "tags": [
          "uploads"
        ],
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "start index",
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "end index, defaults to max return value, 10000",
            "schema": {
              "type": "number",
              "default": 10000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List uploads",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "number"
                    },
                    "end": {
                      "type": "number"
                    },
                    "total_num_uploads": {
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Import"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/upload/{id}/metadata/": {
      "get": {
        "operationId": "getUploadMetadata",
        "summary": "Get upload metadata",
        "tags": [
          "uploads"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Upload metadata",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportDetail"
                }
              }
            }
          }
        }
      }
    },
    "/upload/{id}/delete/": {
      "post": {
        "operationId": "deleteUpload",
        "summary": "Delete an upload permanently",
        "tags": [
          "uploads"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        }
      }
    },
    "/upload/{id}/url/": {
      "get": {
        "operationId": "getUploadUrl",
        "summary": "Get presigned download URL for upload data",
        "tags": [
          "uploads"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Upload ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a signed URL to access the upload's data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "presigned_url": {
                      "type": "string",
                      "description": "The presigned download URL to access the upload's data.",
                      "example": "https://dromo-user-imports.s3.us-west-2.amazonaws.com/b3f0ff47-07e0-4c98-90de-5451aff066c8.json?X-Amz-Algorithm=...&X-Amz-Credential=...&X-Amz-Date=...&X-Amz-Expires=1800&X-Amz-SignedHeaders=host&X-Amz-Signature=..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/headless/imports/{id}/": {
      "get": {
        "tags": [
          "headless"
        ],
        "summary": "Retrieve headless import",
        "operationId": "retrieveHeadlessImport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Headless import ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "66d6300d-1414-4655-83b4-8c80fc527315"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return headless import",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HeadlessImportFull"
                }
              }
            }
          },
          "404": {
            "description": "Not found."
          }
        }
      },
      "delete": {
        "tags": [
          "headless"
        ],
        "summary": "Delete headless import",
        "operationId": "deleteHeadlessImport",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Headless import ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "66d6300d-1414-4655-83b4-8c80fc527315"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Headless import deleted successfully"
          },
          "404": {
            "description": "Not found."
          }
        }
      }
    },
    "/headless/imports/{id}/url/": {
      "get": {
        "operationId": "getHeadlessImportUrl",
        "summary": "Get presigned download URL for headless import data",
        "tags": [
          "headless"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Headless import ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a signed URL to access the headless import's result data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "presigned_url": {
                      "type": "string",
                      "description": "The presigned download URL to access the headless import's result data.",
                      "example": "https://dromo-user-imports.s3.us-west-2.amazonaws.com/b3f0ff47-07e0-4c98-90de-5451aff066c8.json?X-Amz-Algorithm=...&X-Amz-Credential=...&X-Amz-Date=...&X-Amz-Expires=1800&X-Amz-SignedHeaders=host&X-Amz-Signature=..."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/headless/imports/": {
      "get": {
        "tags": [
          "headless"
        ],
        "summary": "List headless imports",
        "operationId": "listHeadlessImports",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "starting index",
            "schema": {
              "type": "number",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "total number of imports to return, defaults 100 max 1000",
            "schema": {
              "type": "number",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List headless imports",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number",
                      "example": 75
                    },
                    "next": {
                      "oneOf": [
                        {
                          "type": "string",
                          "example": "https://app.dromo.io/api/v1/api/v1/headless/imports/?limit=10&offset=10"
                        },
                        {
                          "type": "string",
                          "nullable": true
                        }
                      ]
                    },
                    "previous": {
                      "oneOf": [
                        {
                          "type": "string",
                          "example": "https://app.dromo.io/api/v1/api/v1/headless/imports/?limit=10&offset=10"
                        },
                        {
                          "type": "string",
                          "nullable": true
                        }
                      ]
                    },
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/HeadlessImport"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "headless"
        ],
        "summary": "Create a new headless import",
        "operationId": "createHeadlessImport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "schema_id": {
                    "type": "string",
                    "example": "94187d21-9820-420f-b08c-a80cbbf52604"
                  },
                  "original_filename": {
                    "oneOf": [
                      {
                        "type": "string",
                        "description": "Name of the file being imported (exclude if using initial_data)",
                        "example": "user.csv"
                      },
                      {
                        "type": "string",
                        "nullable": true
                      }
                    ]
                  },
                  "initial_data": {
                    "oneOf": [
                      {
                        "type": "array",
                        "description": "Complete JSON data to be imported, max size 15MB (exclude if using a file)",
                        "example": [
                          {
                            "name": "Jeff",
                            "email": "jeff@dromo.io"
                          },
                          {
                            "name": "Sarah",
                            "email": "sarah@dromo.io"
                          }
                        ]
                      },
                      {
                        "type": "array",
                        "nullable": true
                      }
                    ]
                  },
                  "import_metadata": {
                    "$ref": "#/components/schemas/ImportMetaData"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Import successfully initialized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HeadlessImportFull"
                }
              }
            }
          },
          "404": {
            "description": "No schema found with that id"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "HeadlessImport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "94187d21-9820-420f-b08c-a80cbbf52604",
            "readOnly": true
          },
          "schema_id": {
            "type": "string",
            "example": "94187d21-9820-420f-b08c-a80cbbf52604"
          },
          "status": {
            "type": "string",
            "enum": [
              "AWAITING_UPLOAD",
              "RUNNING",
              "SUCCESSFUL",
              "FAILED",
              "NEEDS_REVIEW"
            ],
            "example": "AWAITING_UPLOAD",
            "readOnly": true
          },
          "original_filename": {
            "type": "string",
            "example": "user_data.csv"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "modified_date": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "HeadlessImportFull": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HeadlessImport"
          },
          {
            "type": "object",
            "properties": {
              "upload": {
                "type": "string",
                "example": "https://dromo-headless-imports-prod.s3.us-west-2.amazonaws.com/test-key-123?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIARY5HJCMTO2AUIBEU%2F20230227%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230227T160315Z&X-Amz-Expires=1800&X-Amz-SignedHeaders=host&X-Amz-Signature=0998ccd9c93142498784d1046bc2709612430f6a0a573572f743e16896d4c498",
                "readOnly": true
              },
              "review_url": {
                "type": "string",
                "example": "https://app.dromo.io/headless/94187d21-9820-420f-b08c-a80cbbf52604/",
                "readOnly": true
              },
              "result_metadata": {
                "oneOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "object",
                    "nullable": true
                  }
                ],
                "example": null,
                "readOnly": true
              },
              "import_errors": {
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  {
                    "type": "array",
                    "nullable": true
                  }
                ],
                "example": null,
                "readOnly": true
              }
            }
          }
        ]
      },
      "ImportMetaData": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "user": {
                "oneOf": [
                  {
                    "type": "object",
                    "$ref": "json_schemas/UserSchema.json"
                  },
                  {
                    "type": "object",
                    "nullable": true
                  }
                ]
              }
            }
          },
          {
            "type": "object",
            "nullable": true
          }
        ],
        "example": {
          "user": {
            "id": "jeff_id",
            "name": "Jeff",
            "email": "jeff@dromo.io",
            "companyName": "Dromo",
            "companyId": "dromo_id"
          }
        }
      },
      "ResultData": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "start": {
            "type": "integer"
          },
          "end": {
            "type": "integer"
          },
          "total_num_rows": {
            "type": "integer"
          }
        },
        "example": {
          "data": [
            {
              "last": "Phillips",
              "email": "jason@moxie.xyz"
            }
          ],
          "start": 0,
          "end": 0,
          "total_num_rows": 1
        }
      },
      "ImportSchema": {
        "type": "object",
        "example": {
          "id": "0631f213-ca91-41e0-9a88-7430c7d0ca28",
          "name": "last - email",
          "fields": [
            {
              "key": "lastName",
              "type": "string",
              "label": "last",
              "validators": [
                {
                  "validate": "required"
                }
              ]
            },
            {
              "key": "email",
              "type": "email",
              "label": "email",
              "validators": [
                {
                  "validate": "required"
                }
              ]
            }
          ],
          "settings": {
            "webhookUrl": "https://webhook.site/ce982a24-c8f1-406d-a372-75beea7c3db4",
            "styleOverrides": {
              "global": {
                "primaryTextColor": "#394B59",
                "secondaryTextColor": "#667D8D"
              },
              "primaryButton": {
                "textColor": "#FFFFFF",
                "backgroundColor": "#007BFF"
              },
              "secondaryButton": {
                "textColor": "#FFFFFF",
                "backgroundColor": "#6C757D"
              }
            },
            "allowCustomFields": false,
            "invalidDataBehavior": "BLOCK_SUBMIT"
          },
          "hooks": {
            "rowHooks": [
              "(record) => { record.row.foo.value = 'bar'; return record }"
            ]
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "json_schemas/DeveloperFieldSchema.json"
            }
          },
          "settings": {
            "$ref": "json_schemas/DeveloperSettingsSchema.json"
          },
          "hooks": {
            "$ref": "json_schemas/HooksSchema.json"
          }
        },
        "required": [
          "name",
          "fields",
          "settings"
        ]
      },
      "Import": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "64b07421-f291-4449-a7d4-0f2e6ab912c4"
          },
          "import_identifier": {
            "type": "string",
            "example": "new products"
          },
          "raw_upload": {
            "type": "object",
            "properties": {
              "filename": {
                "type": "string",
                "example": "my_file.csv"
              },
              "storage_key": {
                "type": "string",
                "example": "c82e33b1-cea6-4271-9d21-38140c13fe28-my_file.csv"
              }
            }
          },
          "user": {
            "type": "object",
            "$ref": "json_schemas/UserSchema.json"
          },
          "created_date": {
            "type": "string",
            "format": "date-time"
          },
          "upload_status": {
            "type": "string",
            "enum": [
              "PENDING_UPLOAD",
              "PROCESSING",
              "PROCESSED",
              "FAILED"
            ]
          },
          "total_num_rows": {
            "type": "number"
          },
          "invalid_row_indexes": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "storage_key": {
            "type": "string",
            "format": "uuid",
            "example": "64b07421-f291-4449-a7d4-0f2e6ab912c4"
          },
          "field_order": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ImportDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Import"
          },
          {
            "type": "object",
            "properties": {
              "raw_upload": {
                "type": "object",
                "properties": {
                  "download_url": {
                    "type": "string",
                    "example": "https://dromo-imports-prod.s3.us-west-2.amazonaws.com/test-key-123?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIARY5HJCMTO2AUIBEU%2F20230227%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20230227T160315Z&X-Amz-Expires=1800&X-Amz-SignedHeaders=host&X-Amz-Signature=0998ccd9c93142498784d1046bc2709612430f6a0a573572f743e16896d4c498"
                  }
                }
              }
            }
          }
        ]
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "X-Dromo-License-Key",
        "in": "header",
        "description": "This backend API key is different than your frontend license key. Please use the \"Backend\" license key from your [Dromo Dashboard](https://dashboard.dromo.io/)."
      }
    }
  }
}